version: "3.7"

services:

  webserver:
    image: nginx:alpine
    container_name: ${APP_NAME}-webserver
    working_dir: /app
    depends_on:
      - phpfpm
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ../:/app
      - ./nginx/${APP_ENV}-conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/${APP_ENV}-conf:/etc/nginx/custom/
      - ./nginx/entrypoint/docker-entrypoint.sh:/docker-entrypoint.d/1-entrypoint.sh
      - ./ssl/:/etc/ssl/
      - phpsocket:/var/run/
      - ${LOGS_FOLDER}/nginx:/var/log/nginx/
    sysctls:
      net.ipv4.ip_unprivileged_port_start: '0'
    user: ${HOST_UID}:${HOST_GID}
    restart: always
    logging:
      options:
        max-size: "50m"
        max-file: "3"

  phpfpm:
    image: devilbox/php-fpm:7.4-work
    container_name: ${APP_NAME}-phpfpm
    working_dir: /app
    environment:
      - NEW_UID=${HOST_UID}
      - NEW_GID=${HOST_GID}
      - DEBUG_ENTRYPOINT=${PHPFPM_DEBUG_ENTRYPOINT}
      - DOCKER_LOGS=${PHPFPM_DOCKER_LOGS}
      - DISABLE_MODULES=${PHPFPM_DISABLE_MODULES}
      - TIMEZONE=${TIMEZONE}
      - TZ=${TIMEZONE}
    volumes:
      - ../:/app
      - ./php-fpm/default/phpfpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/local.phpfpm.conf:/etc/php-fpm-custom.d/phpfpm.conf
      - ./php-fpm/local.php.ini:/etc/php-fpm-custom.d/php.ini
      - phpsocket:/var/run
      - ${LOGS_FOLDER}/php:/var/log/php
    restart: always
    logging:
      options:
        max-size: "50m"
        max-file: "3"

  database:
    image: postgres:13
    container_name: ${APP_NAME}-database
    ports:
      - ${DB_EXTERNAL_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/tmp
      - PGTZ=${TIMEZONE}
      - TZ=${TIMEZONE}
    volumes:
      - db-data:/tmp
      - ./postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ${LOGS_FOLDER}/postgresql:/logs:z
    restart: always
    logging:
      options:
        max-size: "50m"
        max-file: "3"

  cache:
    container_name: ${APP_NAME}-cache
    image: bitnami/redis
    restart: always
    command: "/opt/bitnami/scripts/redis/run.sh --logfile \"/bitnami/log/redis.log\""
    volumes:
      - ${LOGS_FOLDER}/redis:/bitnami/log/
      - cache-data:/bitnami/redis/data
    environment:
      - REDIS_AOF_ENABLED=yes
      - DISABLE_COMMANDS=CONFIG
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TZ=${TIMEZONE}
    logging:
      options:
        max-size: "50m"
        max-file: "3"


  ## DEV ##
  mailhog:
    image: mailhog/mailhog
    container_name: ${APP_NAME}-mailhog
    restart: always
    ports:
      - ${MAILHOG_WEB_SMTP}:1025
      - ${MAILHOG_WEB_PORT}:8025
    volumes:
      - ${LOGS_FOLDER}/mailhog:/var/log/mailhog

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${APP_NAME}-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - ${PGADMIN_PORT}:80
    restart: unless-stopped

  redisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name: ${APP_NAME}-redisadmin
    restart: always
    environment:
      - ADMIN_USER=${REDISADMIN_USER}
      - ADMIN_PASS=${REDISADMIN_PASS}
      - REDIS_1_HOST=cache
      - REDIS_1_PORT=${REDIS_PORT}
      - REDIS_1_AUTH=${REDIS_PASSWORD}
    links:
      - cache
    ports:
      - ${REDISADMIN_WEB_PORT}:80

volumes:
  db-data:
  cache-data:
  letsencrypt:
  phpsocket:
  pgadmin:
  other:
