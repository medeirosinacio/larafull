# Disable direct access (via http and https) to a website using IP address
server {

      listen 80 default_server;
      listen [::]:80 default_server;
      listen 443 ssl http2 default_server;
      listen [::]:443 ssl http2 default_server;
      server_name _;

      include /etc/nginx/default/local.ssl.conf;
      include /etc/nginx/default/local.security.conf;

      return 404;

}

# Redirect http to https
server {

    listen 80;
    server_name local.laravel.com.br;

    include /etc/nginx/default/local.security.conf;

    return 301 https://$host$request_uri;

}

# Server http-v2 ssl conf
server {

    # LISTEM CONF
    server_name local.laravel.com.br;
    listen 443 ssl http2;

    # DEFAULT VARS
    charset utf-8;
    index index.php;
    root /app/public;
    index index.php;
    error_page 404 index.php;

    # LOG
    error_log  /var/log/nginx/nginx.local.laravel.com.br.error.log;
    access_log /var/log/nginx/nginx.local.laravel.com.br.access.log;

    # SSL CONF
    include /etc/nginx/default/local.ssl.conf;

    # SECURITY POLICY
    include /etc/nginx/default/local.security.conf;

    # REDIRECT CONF
    location / {
            try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        fastcgi_param           PATH_INFO $fastcgi_path_info;
        try_files               $uri =404;
        include fastcgi_params;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass phpfpm:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PHP_VALUE "error_log=/var/log/nginx/application_php_errors.log";
        fastcgi_buffers 16 128k;
        fastcgi_buffer_size 256k;
        client_max_body_size 32m;
        fastcgi_param HTTPS on;
        fastcgi_read_timeout        60;
        proxy_connect_timeout       60;
        proxy_send_timeout          60;
        proxy_read_timeout          60;
        send_timeout                60;

        # Avoid sending the security headers twice
        fastcgi_param modHeadersAvailable true;

        # Enable pretty urls
        fastcgi_param front_controller_active true;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
